{
  "name": "Social Media Analytics & Email Campaign",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * 0"
            }
          ]
        }
      },
      "id": "weekly-analytics-trigger-node",
      "name": "Weekly Analytics Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [260, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "tenant-validation",
              "leftValue": "={{ $env.CLIENT_TENANT_ID || 'default' }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validate-tenant-node",
      "name": "Validate Tenant",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "operation": "set",
        "value": "={{ $now.minus({days: 7}).toFormat('yyyy-MM-dd') }}",
        "options": {}
      },
      "id": "set-date-range-node",
      "name": "Set Date Range",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [660, 300]
    },
    {
      "parameters": {
        "resource": "secret",
        "operation": "get",
        "secretId": "n8n/clients/{{ $env.CLIENT_TENANT_ID || 'default' }}/instagram",
        "region": "{{ $env.AWS_DEFAULT_REGION || 'us-east-1' }}"
      },
      "id": "get-instagram-credentials-node",
      "name": "Get Instagram Credentials",
      "type": "n8n-nodes-base.aws",
      "typeVersion": 1,
      "position": [860, 200]
    },
    {
      "parameters": {
        "resource": "secret",
        "operation": "get",
        "secretId": "n8n/clients/{{ $env.CLIENT_TENANT_ID || 'default' }}/facebook",
        "region": "{{ $env.AWS_DEFAULT_REGION || 'us-east-1' }}"
      },
      "id": "get-facebook-credentials-node",
      "name": "Get Facebook Credentials",
      "type": "n8n-nodes-base.aws",
      "typeVersion": 1,
      "position": [860, 300]
    },
    {
      "parameters": {
        "resource": "secret",
        "operation": "get",
        "secretId": "n8n/clients/{{ $env.CLIENT_TENANT_ID || 'default' }}/linkedin",
        "region": "{{ $env.AWS_DEFAULT_REGION || 'us-east-1' }}"
      },
      "id": "get-linkedin-credentials-node",
      "name": "Get LinkedIn Credentials",
      "type": "n8n-nodes-base.aws",
      "typeVersion": 1,
      "position": [860, 400]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://graph.facebook.com/v18.0/{{ $node['Get Instagram Credentials'].json['account_id'] }}/insights",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "metric",
              "value": "impressions,reach,profile_visits,follower_count"
            },
            {
              "name": "period",
              "value": "week"
            },
            {
              "name": "since",
              "value": "={{ $node['Set Date Range'].json['value'] }}"
            },
            {
              "name": "until",
              "value": "={{ $now.toFormat('yyyy-MM-dd') }}"
            },
            {
              "name": "access_token",
              "value": "={{ $node['Get Instagram Credentials'].json['access_token'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fetch-instagram-insights-node",
      "name": "Fetch Instagram Insights",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1060, 200]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://graph.facebook.com/v18.0/{{ $node['Get Facebook Credentials'].json['page_id'] }}/insights",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "metric",
              "value": "page_impressions,page_reach,page_engaged_users,page_fans"
            },
            {
              "name": "period",
              "value": "week"
            },
            {
              "name": "since",
              "value": "={{ $node['Set Date Range'].json['value'] }}"
            },
            {
              "name": "until",
              "value": "={{ $now.toFormat('yyyy-MM-dd') }}"
            },
            {
              "name": "access_token",
              "value": "={{ $node['Get Facebook Credentials'].json['access_token'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fetch-facebook-insights-node",
      "name": "Fetch Facebook Insights",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1060, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  platform,\n  content_type,\n  trending_topic,\n  COUNT(*) as post_count,\n  created_at\nFROM social_media_posts \nWHERE tenant_id = '{{ $env.CLIENT_TENANT_ID || 'default' }}'\n  AND created_at >= '{{ $node['Set Date Range'].json['value'] }}'\n  AND created_at <= '{{ $now.toFormat('yyyy-MM-dd') }}'\nGROUP BY platform, content_type, trending_topic, DATE(created_at)\nORDER BY created_at DESC;",
        "options": {}
      },
      "id": "fetch-post-analytics-node",
      "name": "Fetch Post Analytics",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1060, 400],
      "credentials": {
        "postgres": "n8n-database"
      }
    },
    {
      "parameters": {
        "jsCode": "// Analyze social media performance and generate insights\nconst instagramData = $node['Fetch Instagram Insights'].json;\nconst facebookData = $node['Fetch Facebook Insights'].json;\nconst postData = $node['Fetch Post Analytics'].json;\n\n// Helper function to safely extract metric values\nfunction extractMetricValue(data, metricName) {\n  if (!data || !data.data) return 0;\n  const metric = data.data.find(item => item.name === metricName);\n  return metric && metric.values && metric.values[0] ? metric.values[0].value : 0;\n}\n\n// Extract Instagram metrics\nconst instagramMetrics = {\n  impressions: extractMetricValue(instagramData, 'impressions'),\n  reach: extractMetricValue(instagramData, 'reach'),\n  profile_visits: extractMetricValue(instagramData, 'profile_visits'),\n  follower_count: extractMetricValue(instagramData, 'follower_count')\n};\n\n// Extract Facebook metrics\nconst facebookMetrics = {\n  impressions: extractMetricValue(facebookData, 'page_impressions'),\n  reach: extractMetricValue(facebookData, 'page_reach'),\n  engaged_users: extractMetricValue(facebookData, 'page_engaged_users'),\n  fans: extractMetricValue(facebookData, 'page_fans')\n};\n\n// Calculate engagement rates\nconst instagramEngagementRate = instagramMetrics.reach > 0 ? \n  ((instagramMetrics.profile_visits / instagramMetrics.reach) * 100).toFixed(2) : 0;\n\nconst facebookEngagementRate = facebookMetrics.reach > 0 ? \n  ((facebookMetrics.engaged_users / facebookMetrics.reach) * 100).toFixed(2) : 0;\n\n// Analyze post performance\nconst totalPosts = postData ? postData.length : 0;\nconst contentTypes = {};\nconst trendingTopics = {};\n\nif (postData && Array.isArray(postData)) {\n  postData.forEach(post => {\n    // Count content types\n    if (post.content_type) {\n      contentTypes[post.content_type] = (contentTypes[post.content_type] || 0) + post.post_count;\n    }\n    \n    // Count trending topics\n    if (post.trending_topic) {\n      trendingTopics[post.trending_topic] = (trendingTopics[post.trending_topic] || 0) + post.post_count;\n    }\n  });\n}\n\n// Generate insights and recommendations\nconst insights = [];\nconst recommendations = [];\n\nif (instagramEngagementRate > 3) {\n  insights.push('Instagram engagement rate is excellent (>' + instagramEngagementRate + '%)');\n} else if (instagramEngagementRate > 1) {\n  insights.push('Instagram engagement rate is average (' + instagramEngagementRate + '%)');\n  recommendations.push('Consider posting more engaging content or using trending hashtags');\n} else {\n  insights.push('Instagram engagement rate needs improvement (' + instagramEngagementRate + '%)');\n  recommendations.push('Focus on creating more interactive content and engaging with followers');\n}\n\nif (facebookEngagementRate > 2) {\n  insights.push('Facebook engagement rate is good (' + facebookEngagementRate + '%)');\n} else {\n  insights.push('Facebook engagement rate could be improved (' + facebookEngagementRate + '%)');\n  recommendations.push('Try posting at different times and use more visual content on Facebook');\n}\n\nif (totalPosts < 5) {\n  recommendations.push('Increase posting frequency to maintain audience engagement');\n}\n\n// Identify best performing content types\nconst bestContentType = Object.keys(contentTypes).reduce((a, b) => \n  contentTypes[a] > contentTypes[b] ? a : b, null);\n\nif (bestContentType) {\n  recommendations.push(`Focus more on ${bestContentType} content as it performs best`);\n}\n\nreturn [{\n  json: {\n    period: {\n      start: $node['Set Date Range'].json['value'],\n      end: $now.toFormat('yyyy-MM-dd')\n    },\n    instagram: {\n      ...instagramMetrics,\n      engagement_rate: instagramEngagementRate\n    },\n    facebook: {\n      ...facebookMetrics,\n      engagement_rate: facebookEngagementRate\n    },\n    posts: {\n      total: totalPosts,\n      content_types: contentTypes,\n      trending_topics: trendingTopics,\n      best_content_type: bestContentType\n    },\n    insights,\n    recommendations,\n    tenant_id: $env.CLIENT_TENANT_ID || 'default',\n    generated_at: $now.toDateTime()\n  }\n}];"
      },
      "id": "analyze-performance-node",
      "name": "Analyze Performance",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1260, 300]
    },
    {
      "parameters": {
        "resource": "secret",
        "operation": "get",
        "secretId": "n8n/clients/{{ $env.CLIENT_TENANT_ID || 'default' }}/email-settings",
        "region": "{{ $env.AWS_DEFAULT_REGION || 'us-east-1' }}"
      },
      "id": "get-email-settings-node",
      "name": "Get Email Settings",
      "type": "n8n-nodes-base.aws",
      "typeVersion": 1,
      "position": [1460, 300]
    },
    {
      "parameters": {
        "resource": "secret",
        "operation": "get",
        "secretId": "n8n/clients/{{ $env.CLIENT_TENANT_ID || 'default' }}/brevo-credentials",
        "region": "{{ $env.AWS_DEFAULT_REGION || 'us-east-1' }}"
      },
      "id": "get-brevo-credentials-node",
      "name": "Get Brevo Credentials",
      "type": "n8n-nodes-base.aws",
      "typeVersion": 1,
      "position": [1460, 400]
    },
    {
      "parameters": {
        "resource": "emailCampaigns",
        "operation": "send",
        "emailCampaign": {
          "name": "Weekly Social Media Analytics Report - {{ $now.toFormat('MMM dd, yyyy') }}",
          "subject": "📊 Your Weekly Social Media Performance Report",
          "htmlContent": "<html><body style='font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto;'><div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0;'><h1 style='margin: 0; font-size: 28px;'>📊 Weekly Analytics Report</h1><p style='margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;'>{{ $json.period.start }} to {{ $json.period.end }}</p></div><div style='padding: 30px; background: #f8f9fa; border-radius: 0 0 10px 10px;'><div style='background: white; padding: 25px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);'><h2 style='color: #2c5aa0; margin-top: 0; border-bottom: 2px solid #e9ecef; padding-bottom: 10px;'>📈 Performance Overview</h2><div style='display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;'><div style='text-align: center; padding: 15px; background: #e3f2fd; border-radius: 6px;'><h3 style='margin: 0; color: #1976d2; font-size: 24px;'>{{ $json.instagram.impressions | number_format }}</h3><p style='margin: 5px 0 0 0; color: #666;'>Instagram Impressions</p></div><div style='text-align: center; padding: 15px; background: #f3e5f5; border-radius: 6px;'><h3 style='margin: 0; color: #7b1fa2; font-size: 24px;'>{{ $json.facebook.impressions | number_format }}</h3><p style='margin: 5px 0 0 0; color: #666;'>Facebook Impressions</p></div><div style='text-align: center; padding: 15px; background: #e8f5e8; border-radius: 6px;'><h3 style='margin: 0; color: #388e3c; font-size: 24px;'>{{ $json.instagram.engagement_rate }}%</h3><p style='margin: 5px 0 0 0; color: #666;'>Instagram Engagement</p></div><div style='text-align: center; padding: 15px; background: #fff3e0; border-radius: 6px;'><h3 style='margin: 0; color: #f57c00; font-size: 24px;'>{{ $json.facebook.engagement_rate }}%</h3><p style='margin: 5px 0 0 0; color: #666;'>Facebook Engagement</p></div></div></div><div style='background: white; padding: 25px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);'><h2 style='color: #2c5aa0; margin-top: 0; border-bottom: 2px solid #e9ecef; padding-bottom: 10px;'>💡 Key Insights</h2><ul style='list-style: none; padding: 0;'>{% for insight in $json.insights %}<li style='background: #e3f2fd; margin: 10px 0; padding: 12px 15px; border-left: 4px solid #1976d2; border-radius: 4px;'>{{ insight }}</li>{% endfor %}</ul></div><div style='background: white; padding: 25px; border-radius: 8px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);'><h2 style='color: #2c5aa0; margin-top: 0; border-bottom: 2px solid #e9ecef; padding-bottom: 10px;'>🎯 Recommendations</h2><ol style='padding-left: 20px;'>{% for recommendation in $json.recommendations %}<li style='margin: 10px 0; padding: 8px 0; color: #555;'>{{ recommendation }}</li>{% endfor %}</ol></div><div style='background: white; padding: 25px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);'><h2 style='color: #2c5aa0; margin-top: 0; border-bottom: 2px solid #e9ecef; padding-bottom: 10px;'>📝 Content Performance</h2><p><strong>Total Posts This Week:</strong> {{ $json.posts.total }}</p>{% if $json.posts.best_content_type %}<p><strong>Best Performing Content:</strong> {{ $json.posts.best_content_type }}</p>{% endif %}<p><strong>Trending Topics Used:</strong></p><ul>{% for topic, count in $json.posts.trending_topics %}<li>{{ topic }} ({{ count }} posts)</li>{% endfor %}</ul></div><div style='text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #dee2e6; color: #6c757d; font-size: 12px;'><p>Generated by {{ $env.CLIENT_TENANT_ID || 'Default' }} Automation Platform<br>{{ $json.generated_at }}</p></div></div></body></html>",
          "sender": {
            "name": "{{ $node['Get Email Settings'].json['sender_name'] || 'Analytics Team' }}",
            "email": "{{ $node['Get Email Settings'].json['sender_email'] || 'analytics@your-domain.com' }}"
          },
          "to": [
            {
              "email": "{{ $node['Get Email Settings'].json['recipient_email'] }}",
              "name": "{{ $node['Get Email Settings'].json['recipient_name'] || 'Marketing Team' }}"
            }
          ]
        }
      },
      "id": "send-analytics-email-node",
      "name": "Send Analytics Email",
      "type": "n8n-nodes-base.brevo",
      "typeVersion": 1,
      "position": [1660, 300],
      "credentials": {
        "brevoApi": "={{ $node['Get Brevo Credentials'].json['api_key'] }}"
      }
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "analytics_reports",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "tenant_id": "={{ $json.tenant_id }}",
            "report_type": "weekly_analytics",
            "period_start": "={{ $json.period.start }}",
            "period_end": "={{ $json.period.end }}",
            "instagram_impressions": "={{ $json.instagram.impressions }}",
            "instagram_reach": "={{ $json.instagram.reach }}",
            "instagram_engagement_rate": "={{ $json.instagram.engagement_rate }}",
            "facebook_impressions": "={{ $json.facebook.impressions }}",
            "facebook_reach": "={{ $json.facebook.reach }}",
            "facebook_engagement_rate": "={{ $json.facebook.engagement_rate }}",
            "total_posts": "={{ $json.posts.total }}",
            "insights": "={{ JSON.stringify($json.insights) }}",
            "recommendations": "={{ JSON.stringify($json.recommendations) }}",
            "created_at": "={{ $json.generated_at }}"
          },
          "matchingColumns": [],
          "schema": []
        },
        "options": {}
      },
      "id": "log-analytics-database-node",
      "name": "Log Analytics to Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [1860, 300],
      "credentials": {
        "postgres": "n8n-database"
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\\n  \\\"success\\\": false,\\n  \\\"error\\\": \\\"Unauthorized tenant for analytics\\\",\\n  \\\"tenant_id\\\": \\\"{{ $env.CLIENT_TENANT_ID }}\\\",\\n  \\\"timestamp\\\": \\\"{{ $now.toDateTime() }}\\\"\\n}",
        "options": {
          "responseCode": 403
        }
      },
      "id": "unauthorized-analytics-response-node",
      "name": "Unauthorized Analytics Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [660, 500]
    }
  ],
  "connections": {
    "Weekly Analytics Trigger": {
      "main": [
        [
          {
            "node": "Validate Tenant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Tenant": {
      "main": [
        [
          {
            "node": "Set Date Range",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Unauthorized Analytics Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Date Range": {
      "main": [
        [
          {
            "node": "Get Instagram Credentials",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Facebook Credentials",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get LinkedIn Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Instagram Credentials": {
      "main": [
        [
          {
            "node": "Fetch Instagram Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Facebook Credentials": {
      "main": [
        [
          {
            "node": "Fetch Facebook Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get LinkedIn Credentials": {
      "main": [
        [
          {
            "node": "Fetch Post Analytics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Instagram Insights": {
      "main": [
        [
          {
            "node": "Analyze Performance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Facebook Insights": {
      "main": [
        [
          {
            "node": "Analyze Performance",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Fetch Post Analytics": {
      "main": [
        [
          {
            "node": "Analyze Performance",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Analyze Performance": {
      "main": [
        [
          {
            "node": "Get Email Settings",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Brevo Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Email Settings": {
      "main": [
        [
          {
            "node": "Send Analytics Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Brevo Credentials": {
      "main": [
        [
          {
            "node": "Send Analytics Email",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Send Analytics Email": {
      "main": [
        [
          {
            "node": "Log Analytics to Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "timezone": "America/Sao_Paulo",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "webhook-error-handler"
  },
  "staticData": {},
  "tags": [
    {
      "createdAt": "2025-09-18T00:00:00.000Z",
      "updatedAt": "2025-09-18T00:00:00.000Z",
      "id": "analytics-automation",
      "name": "Analytics Automation"
    },
    {
      "createdAt": "2025-09-18T00:00:00.000Z",
      "updatedAt": "2025-09-18T00:00:00.000Z",
      "id": "email-campaigns",
      "name": "Email Campaigns"
    },
    {
      "createdAt": "2025-09-18T00:00:00.000Z",
      "updatedAt": "2025-09-18T00:00:00.000Z",
      "id": "performance-tracking",
      "name": "Performance Tracking"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-18T00:00:00.000Z",
  "versionId": "1"
}